#!/bin/sh
CRUNCH_MERGE='BEGIN{FS=","}{ leaves_rewritten+=$5; leaves_recycled+=$7; parent1_rewritten+=$9; parent1_recycled+=$11; keys_promoted+=$13; keys_rewritten+=$15; keys_shadowed+=$17; tombstones_removed+=$19; if(max_tombstones_removed==""){max_tombstones_removed=$19}; if($19>max_tombstones_removed){max_tombstones_removed=$19}; ms+=$21; if(max_ms==""){max_ms=$21}; if($21>max_ms){max_ms=$21}; }END{printf "%d, leaves_rewritten,%.2f, leaves_recycled,%.2f, parent1_rewritten,%.2f, parent1_recycled,%.2f, keys_promoted,%.2f, keys_rewritten,%.2f, keys_shadowed,%.2f, tombstones_removed,%.2f (max %d), ms,%.2f (max %d)\n", NR, leaves_rewritten/NR, leaves_recycled/NR, parent1_rewritten/NR, parent1_recycled/NR, keys_promoted/NR, keys_rewritten/NR, keys_shadowed/NR, tombstones_removed/NR, max_tombstones_removed, ms/NR, max_ms}'
/bin/echo -n "merge,from,Incoming,"
egrep merge $1 | egrep Incoming | awk "$CRUNCH_MERGE"
/bin/echo -n "merge,from,Waiting,"
egrep merge $1 | egrep Waiting | awk "$CRUNCH_MERGE"
/bin/echo -n "merge,from,Regular(0),"
egrep merge $1 | egrep 'Regular\(0\)' | awk "$CRUNCH_MERGE"
/bin/echo -n "merge,from,Regular(1),"
egrep merge $1 | egrep 'Regular\(1\)' | awk "$CRUNCH_MERGE"
/bin/echo -n "open_cursor,"
egrep open_cursor $1 | awk 'BEGIN{FS=","} { fresh+=$4; young+=$6; levels+=$8; } END {printf "%d, fresh,%.2f, young,%.2f, levels,%.2f\n", NR, fresh/NR, young/NR, levels/NR}'
egrep tombstones_skipped $1 | awk 'BEGIN{FS=","} { tombstones_skipped+=$3; if(max==""){max=$3}; if($3>max){max=$3}; } END {printf "tombstones_skipped,%.2f (%d max)\n", tombstones_skipped/NR, max}'
#CRUNCH_PREPARE='BEGIN{FS=","} { ms+=$5; if(max==""){max=$5}; if($5>max){max=$5}; } END {printf "%.2f (%d max)\n", ms/NR, max}'
#/bin/echo -n "prepare,from,Incoming,"
#egrep prepare $1 | egrep Incoming | awk "$CRUNCH_PREPARE"
#/bin/echo -n "prepare,from,Waiting,"
#egrep prepare $1 | egrep Waiting | awk "$CRUNCH_PREPARE"
#/bin/echo -n "prepare,from,Regular(0),"
#egrep prepare $1 | egrep 'Regular\(0\)' | awk "$CRUNCH_PREPARE"
CRUNCH_DESPERATE='BEGIN{FS=","} { ms+=$4; } END {printf "%d,%d\n", NR, ms}'
/bin/echo -n "desperate,main,"
egrep desperate $1 | egrep main | awk "$CRUNCH_DESPERATE"
/bin/echo -n "desperate,Incoming,"
egrep desperate $1 | egrep Incoming | awk "$CRUNCH_DESPERATE"
/bin/echo -n "desperate,Waiting,"
egrep desperate $1 | egrep Waiting | awk "$CRUNCH_DESPERATE"
/bin/echo -n "desperate,Regular,"
egrep desperate $1 | egrep Regular | awk "$CRUNCH_DESPERATE"

